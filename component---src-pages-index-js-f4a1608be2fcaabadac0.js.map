{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","siteDescription","description","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","location","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","lang","meta","name","content","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","kebabcase","topic","toLowerCase","_components_Badge_Badge__WEBPACK_IMPORTED_MODULE_8__","date","timeToRead","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"8PAUMA,4FACJC,kBAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAkBP,EAAKI,KAAKC,aAAaG,YACzCC,EAAQT,EAAKU,kBAAkBC,MAErC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUf,KAAKC,MAAMc,SAAUV,MAAOH,GAC5CS,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASf,IACvCD,MAAOH,IAETS,EAAAC,EAAAC,cAACS,EAAA,EAAD,MACAX,EAAAC,EAAAC,cAAA,0BACCL,EAAMe,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNpB,EAAQoB,EAAKC,YAAYrB,OAASoB,EAAKE,OAAOC,KACpD,OACEjB,EAAAC,EAAAC,cAAA,OAAKgB,IAAKJ,EAAKE,OAAOC,MACpBjB,EAAAC,EAAAC,cAAA,MAAIiB,MAAO,CAAEC,aAAcC,YAAO,OAChCrB,EAAAC,EAAAC,cAACoB,EAAA,KAAD,CAAMH,MAAO,CAAEI,UAAW,QAAUC,GAAIV,EAAKE,OAAOC,MACjDvB,IAGLM,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACoB,EAAA,KAAD,CACEH,MAAO,CAAEI,UAAW,QACpBC,GAAE,UAAYC,IACZX,EAAKC,YAAYW,MAAMC,gBAEzB3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KAAQd,EAAKC,YAAYW,QAE1BZ,EAAKC,YAAYc,KARpB,MAQ6Bf,EAAKgB,WARlC,aAUA9B,EAAAC,EAAAC,cAAA,KAAG6B,wBAAyB,CAAEC,OAAQlB,EAAKmB,mBAnCjCC,IAAMC,WA4CfjD,YAER,IAAMkD,EAAS","file":"component---src-pages-index-js-f4a1608be2fcaabadac0.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport kebabcase from 'lodash.kebabcase';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport { rhythm } from '../utils/typography';\nimport Badge from '../components/Badge/Badge';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const siteDescription = data.site.siteMetadata.description;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        <Bio />\n        <h2>Latest Posts</h2>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3 style={{ marginBottom: rhythm(1 / 4) }}>\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                <Link\n                  style={{ boxShadow: 'none' }}\n                  to={`/topic/${kebabcase(\n                    node.frontmatter.topic.toLowerCase(),\n                  )}`}>\n                  <Badge>{node.frontmatter.topic}</Badge>\n                </Link>\n                {node.frontmatter.date} â€¢ {node.timeToRead} min read\n              </small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"DD MMMM YYYY\")\n            title\n            topic\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}