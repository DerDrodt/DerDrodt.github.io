{"data":{"site":{"siteMetadata":{"title":"DerDrodt","author":"Daniel Drodt"}},"markdownRemark":{"id":"f23c268f-8cbc-59cf-85cc-dcfa964c0a42","excerpt":"Our own functions! Last time, we already explored how we can use functions in Racket. In this part, we explore how to create our own…","html":"<h2>Our own functions!</h2>\n<p>Last time, we already explored how we can use functions in Racket. In this part, we explore how to create our own functions. How exciting!</p>\n<p>Let’s say, for example, we want to write a function that takes a number and gives back (returns) it’s square. We’ll call it <code class=\"language-text\">square</code>, appropriately enough.</p>\n<p>How do we define functions in Racket? By calling a function of course! The <code class=\"language-text\">define</code>-function to be precise.</p>\n<div class=\"gatsby-highlight\" data-language=\"scheme\"><pre class=\"language-scheme\"><code class=\"language-scheme\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">define</span> <span class=\"token punctuation\">(</span><span class=\"token function\">square</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> x x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Alright one step at a time. As we said, to define a function, we call <code class=\"language-text\">define</code>. <code class=\"language-text\">define</code> takes two arguments, the first one is our function head, so <code class=\"language-text\">(square x)</code> which is first the name of the function and then it’s parameters, just x in our case. The head is basically just the way we want to use our function later. The second parameter, the function body, is what we want to return. It can be a primitive or the result of a function call or a function itself. In our case, it is <code class=\"language-text\">(* x x)</code> - the square of <code class=\"language-text\">x</code>.</p>\n<div class=\"custom-block custom-block-tip\"><div class=\"custom-block-heading\">CONVENTION</div><div class=\"custom-block-body\"><p>In Racket function, argument and variable names are all named by convention is <strong>kebab-case</strong>. That means everything is lower-case and words are seperated with a ”-“.</p></div></div>\n<p>Now that we have our <code class=\"language-text\">square</code> function, we can use it like any other function.</p>\n<div class=\"gatsby-highlight\" data-language=\"scheme\"><pre class=\"language-scheme\"><code class=\"language-scheme\"><span class=\"token punctuation\">(</span><span class=\"token function\">square</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n> <span class=\"token number\">4</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">square</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n> <span class=\"token number\">64</span></code></pre></div>\n<p>We will always get the same result, as if we had just used <code class=\"language-text\">*</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"scheme\"><pre class=\"language-scheme\"><code class=\"language-scheme\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n> <span class=\"token number\">4</span>\n<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n> <span class=\"token number\">64</span></code></pre></div>\n<p>Why is it helpful to create function? Because most functions are a bit more complex than squaring numbers and because we are less prone to errors, if we split our program up in functions. Let’s consider this example: We want to calculate the area of a circle (`A = \\pi * r^2)</p>","timeToRead":1,"frontmatter":{"date":"07 December 2018","title":"Functions","topic":"fop"}}},"pageContext":{"slug":"/fop/racket-functions/","previous":{"fields":{"slug":"/fop/racket-intro/"},"frontmatter":{"title":"Introduction to Racket","topic":"fop"}},"next":null}}