{"data":{"site":{"siteMetadata":{"title":"DerDrodt","author":"Daniel Drodt"}},"markdownRemark":{"id":"aeecb2cf-0c95-5389-9c15-d8cf30f75d41","excerpt":"Our own functions! Last time, we already explored how we can use functions in Racket. In this part, we explore how to create our own…","html":"<h2>Our own functions!</h2>\n<p>Last time, we already explored how we can use functions in Racket. In this part, we explore how to create our own functions. How exciting!</p>\n<p>Let’s say, for example, we want to write a function that takes a number and gives back (returns) it’s square. We’ll call it <code class=\"language-text\">square</code>, appropriately enough.</p>\n<p>How do we define functions in Racket? By calling a function of course! The <code class=\"language-text\">define</code>-function to be precise</p>\n<div class=\"gatsby-highlight\" data-language=\"scheme\"><pre class=\"language-scheme\"><code class=\"language-scheme\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">define</span> <span class=\"token punctuation\">(</span><span class=\"token function\">square</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> x x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"date":"07 December 2018","title":"Functions","topic":"fop"}}},"pageContext":{"slug":"/FoP/racket-functions/","previous":{"fields":{"slug":"/FoP/racket-intro/"},"frontmatter":{"title":"Introduction to Racket","topic":"fop"}},"next":null}}